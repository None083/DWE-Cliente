{
  "": {
    "prefix": "___btnsUltimos2Pulsados",
    "scope": "javascript",
    "body": [
      "import './App.css';\r",
      "import 'bootstrap/dist/css/bootstrap.min.css';\r",
      "import { Button } from 'reactstrap';\r",
      "import { Component } from 'react';\r",
      "\r",
      "class App extends Component {\r",
      "  constructor(props) {\r",
      "    super(props);\r",
      "    this.state = {\r",
      "      colores: Array(5).fill(\"secondary\"),\r",
      "      ultimosPulsados: []\r",
      "    }\r",
      "  }\r",
      "\r",
      "  cambioColor2(numBoton) {\r",
      "    let coloresAux = [...this.state.colores];\r",
      "    let ultimosPulsadosAux = [...this.state.ultimosPulsados];\r",
      "\r",
      "    if (coloresAux[numBoton] === \"info\") {\r",
      "      return;\r",
      "    }\r",
      "\r",
      "    ultimosPulsadosAux.push(numBoton);\r",
      "\r",
      "    if (ultimosPulsadosAux.length > 2) {\r",
      "      const botonAntiguo = ultimosPulsadosAux.shift();\r",
      "      coloresAux[botonAntiguo] = \"secondary\";\r",
      "    }\r",
      "\r",
      "    coloresAux[numBoton] = \"info\";\r",
      "\r",
      "    this.setState({\r",
      "      colores:coloresAux, \r",
      "      ultimosPulsados:ultimosPulsadosAux\r",
      "    });\r",
      "  }\r",
      "  render() {\r",
      "    return (\r",
      "      <div className=\"App\">\r",
      "        <Button color={this.state.colores[0]} onClick={() => this.cambioColor2(0)}>Uno</Button>\r",
      "        <Button color={this.state.colores[1]} onClick={() => this.cambioColor2(1)}>Dos</Button>\r",
      "        <Button color={this.state.colores[2]} onClick={() => this.cambioColor2(2)}>Tres</Button>\r",
      "        <Button color={this.state.colores[3]} onClick={() => this.cambioColor2(3)}>Cuatro</Button>\r",
      "        <Button color={this.state.colores[4]} onClick={() => this.cambioColor2(4)}>Cinco</Button>\r",
      "      </div>\r",
      "    );\r",
      "  }\r",
      "\r",
      "}\r",
      "\r",
      "export default App;\r",
      ""
    ],
    "description": ""
  }
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}