{
  "": {
    "prefix": "___5btns1contador",
    "scope": "javascript",
    "body": [
      "import 'bootstrap/dist/css/bootstrap.min.css';\r",
      "import { Button } from 'reactstrap';\r",
      "import { Component } from 'react';\r",
      "\r",
      "class App extends Component {\r",
      "  constructor(props) {\r",
      "    super(props);\r",
      "    this.state = {\r",
      "      listabotones: Array(5).fill(\"secondary\"),\r",
      "      cuantos: 0\r",
      "    };\r",
      "  }\r",
      "\r",
      "  //esta es mi callback\r",
      "  setSeleccionado(num) {\r",
      "    let l = this.state.listabotones;\r",
      "    if (l[num] !== \"danger\") {\r",
      "      l[num] = \"danger\";\r",
      "      this.setState(e => ({\r",
      "        listabotones: l,\r",
      "        cuantos: e.cuantos + 1\r",
      "      }));\r",
      "    }\r",
      "  }\r",
      "  render() {\r",
      "    return (\r",
      "      <div className=\"App\">\r",
      "        <header className=\"App-header\">\r",
      "          <h1>{this.state.cuantos}</h1>\r",
      "          <br />\r",
      "\r",
      "          <Botoncillo color={this.state.listabotones[0]} onClick={() => this.setSeleccionado(0)} />\r",
      "          <Botoncillo color={this.state.listabotones[1]} onClick={() => this.setSeleccionado(1)} />\r",
      "          <Botoncillo color={this.state.listabotones[2]} onClick={() => this.setSeleccionado(2)} />\r",
      "          <Botoncillo color={this.state.listabotones[3]} onClick={() => this.setSeleccionado(3)} />\r",
      "          <Botoncillo color={this.state.listabotones[4]} onClick={() => this.setSeleccionado(4)} />\r",
      "        </header>\r",
      "      </div>\r",
      "    );\r",
      "  }\r",
      "\r",
      "\r",
      "}\r",
      "\r",
      "function Botoncillo(props) {\r",
      "  return (\r",
      "    <>\r",
      "      <Button color={props.color} onClick={props.onClick}></Button>\r",
      "    </>\r",
      "\r",
      "  );\r",
      "}\r",
      "\r",
      "\r",
      "export default App;"
    ],
    "description": ""
  }
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}