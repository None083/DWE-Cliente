{
  "": {
    "prefix": "___conversor-dolares",
    "scope": "javascript",
    "body": [
      "import { Component } from \"react\";\r",
      "import 'bootstrap/dist/css/bootstrap.min.css';\r",
      "import { Button } from 'reactstrap';\r",
      "\r",
      "class App extends Component {\r",
      "  constructor(props) {\r",
      "    super(props);\r",
      "    this.state = {\r",
      "      euros: 0,\r",
      "      factor: 1.1,\r",
      "    }\r",
      "  }\r",
      "  aumentar() {\r",
      "    let auxEuro = this.state.euros+1;\r",
      "    this.setState({euros:auxEuro})\r",
      "  }\r",
      "  disminuir(){\r",
      "    let auxEuro = this.state.euros-1;\r",
      "    this.setState({euros:auxEuro})\r",
      "  }\r",
      "  render() {\r",
      "    return (\r",
      "      <div className=\"App\">\r",
      "        <p>\r",
      "          {this.state.euros} Euros equivalen a {this.state.euros * this.state.factor} DÃ³lares\r",
      "        </p>\r",
      "        <p>\r",
      "          <Button color=\"success\" onClick={() => this.aumentar()}>+</Button>\r",
      "          <Button color=\"danger\" onClick={() => this.disminuir()}>-</Button>\r",
      "        </p>\r",
      "      </div>\r",
      "    );\r",
      "  }\r",
      "}\r",
      "\r",
      "export default App;"
    ],
    "description": ""
  }
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}